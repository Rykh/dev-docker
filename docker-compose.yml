version: '2.1'
services:
    webserver:
        image: nginx:alpine
        hostname: mage.perf
        volumes:
          - project-data:/magento
          - ./etc/nginx/magento.conf:/etc/nginx/conf.d/default.conf
          - ./etc/nginx/xhgui.conf:/etc/nginx/conf.d/xhgui.conf
          - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
          - ./xhgui:/xhgui
        ports:
          - "80:80"

    app:
        build:
          context: .
          dockerfile: build/php/Dockerfile
        hostname: app
        container_name: app
        volumes:
          - project-data:/magento
          - ./etc/php/tools:/usr/local/bin/magento2:ro
          - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
          - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
          - ./etc/php/tideways.ini:/usr/local/etc/php/conf.d/tideways.ini
          - ~/.ssh:/root/.ssh:ro
          -  ~/.composer:/root/.composer

    app-xdebug:
        build:
          context: .
          dockerfile: build/php-xdebug/Dockerfile
        hostname: app-xdebug
        container_name: xdebug
        volumes:
          - project-data:/magento
          - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
          - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
          - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini

    xhgui:
        build:
          context: .
          dockerfile: build/xhgui/Dockerfile
        hostname: xhgui.perf
        container_name: xhgui
        volumes:
          - ./xhgui/router.php:/xhgui/router.php
          - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
          - ./etc/php/apache.conf:/etc/apache2/sites-enabled/000-default.conf

    db:
        container_name: magento2ee_db
        image: mysql:5.7
        ports:
          - "3306:3306"
        environment:
          - MYSQL_ROOT_PASSWORD=root
          - MYSQL_DATABASE=mysql
        volumes:
          - db-data:/var/lib/mysql
    redis:
        container_name: redis
        image: redis:3.2-alpine
        hostname: redis

    nfs:
        container_name: nfs
        image: itsthenetwork/nfs-server-alpine:latest
        privileged: true
        environment:
          - SHARED_DIRECTORY=/nfsshare
        ports:
          - "62049:2049"
        volumes:
          - project-data:/nfsshare

    elasticsearch:
        container_name: elasticsearch
        image: elasticsearch:2-alpine

#    samba:
#        container_name: samba
#        image: dperson/samba
#        ports:
#          - "139:139"
#          - "445:445"
#        volumes:
#          - project-data:/share
#        command:
#          - -u
#          - test;test
#          - -s
#          - share;/share;yes;no;yes;test

    mongodb:
        image: mongo

volumes:
    project-data:
    db-data:
